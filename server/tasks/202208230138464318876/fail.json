{"code": 0, "msg": "FAIL", "task_id": "202208230138464318876", "task_name": "whole process", "create_time": "20220823013846431981", "error": "Traceback (most recent call last):\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 848, in check_args\n    ArgFormats[f].check(arg)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 672, in check\n    util.format_trace(arg.caller))\nCompiler.exceptions.ArgumentError: (s13075, 'Register from other tape, trace: <omitted>')\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/jit/service/mpc/driver/task.py\", line 60, in persist\n    r = self.__future.result()\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 425, in result\n    return self.__get_result()\n  File \"/usr/lib/python3.6/concurrent/futures/_base.py\", line 384, in __get_result\n    raise self._exception\n  File \"/usr/lib/python3.6/concurrent/futures/thread.py\", line 56, in run\n    result = self.fn(*self.args, **self.kwargs)\n  File \"/home/jit/service/mpc/SrcCode/main_dynamic_function.py\", line 30, in start_mpc\n    res = dv.eval_formula()\n  File \"/home/jit/service/mpc/SrcCode/Source/dynamic_function.py\", line 313, in eval_formula\n    result = self.statics_function_map_l1[sfunc[\"function\"]](total_ary)\n  File \"/home/jit/service/mpc/SrcCode/Source/dynamic_function.py\", line 373, in calc_std\n    res = sqrt(sum(ares)/ttlen)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 134, in vectorized_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 626, in wrapper\n    instruction(res.v, args[0].v, k, f, *args[1:])\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 583, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 612, in instruction\n    res.mov(res, function(sfix._new(arg, k=k, f=f), *args).v)\n  File \"/home/jit/service/mpc/Compiler/mpc_math.py\", line 788, in sqrt\n    return sqrt_simplified_fx(x)\n  File \"/home/jit/service/mpc/Compiler/mpc_math.py\", line 607, in sqrt_simplified_fx\n    y_0 = 1 / w\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 134, in vectorized_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 4299, in __rtruediv__\n    return self.coerce(other) / self\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 134, in vectorized_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 3830, in __truediv__\n    nearest=sfix.round_nearest),\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 594, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/library.py\", line 1894, in FPDiv\n    y = y.round(l_y, f, kappa, nearest, signed=True)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 134, in vectorized_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 2629, in round\n    return self.TruncPr(k, m, kappa, signed=signed)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 2603, in TruncPr\n    return floatingpoint.TruncPr(self, k, m, kappa, signed=signed)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 594, in wrapper\n    return function(*args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/floatingpoint.py\", line 492, in TruncPr\n    return nl.trunc_pr(a, k, m, signed)\n  File \"/home/jit/service/mpc/Compiler/non_linear.py\", line 42, in trunc_pr\n    return self._trunc_pr(a, k, m, signed)\n  File \"/home/jit/service/mpc/Compiler/non_linear.py\", line 168, in _trunc_pr\n    return TruncPrRing(a, k, m, signed=signed)\n  File \"/home/jit/service/mpc/Compiler/floatingpoint.py\", line 526, in TruncPrRing\n    r = sint.bit_compose(r_bits)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 2013, in bit_compose\n    return super(_secret, cls).bit_compose(bits)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 681, in bit_compose\n    return sum(cls.conv(b) << i for i,b in enumerate(bits))\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 238, in __add__\n    return self.add(other)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 2049, in add\n    return self.secret_op(other, adds, addm, addsi)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 202, in instruction_typed_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 213, in read_mem_operation\n    return operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 134, in vectorized_operation\n    res = operation(self, *args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/types.py\", line 2027, in secret_op\n    s_inst(res, self, other)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 395, in maybe_gf2n_instruction\n    return instruction(*args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 302, in maybe_vectorized_instruction\n    return instruction(*args, **kwargs)\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 809, in __init__\n    self.check_args()\n  File \"/home/jit/service/mpc/Compiler/instructions_base.py\", line 851, in check_args\n    % (n, e.arg, self) + '\\n' + e.msg)\nCompiler.exceptions.CompilerError: Invalid argument 1 \"s13075\" to instruction: adds s0, s13075, s13076\nRegister from other tape, trace: <omitted>\n"}